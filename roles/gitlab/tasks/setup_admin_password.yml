---

# Ensure required facts are defined
- name: "Ensure required facts are defined"
  ansible.builtin.set_fact:
    requested_gitlab_admin_password_hash: "{{ gitlab_admin_password | password_hash('md5') }}"

# Check if Admin Password Hash File Exists
- name: "Check if Admin Password Hash File Exists"
  ansible.builtin.stat:
    path: "{{ gitlab_admin_password_hash_file }}"
  register: gitlab_admin_password_hash_file_result

# Admin Password Hash File Exists Block
- name: "Admin Password Hash File Exists Block"
  when: gitlab_admin_password_hash_file_result.stat.exists
  block:

    # Ensure Password Hash File Content is Readed
    - name: "Ensure Password Hash File Content is Readed"
      ansible.builtin.slurp:
        path: "{{ gitlab_admin_password_hash_file }}"
      register: admin_password_hash_file_slurp

    # Define Existing Admin Password Hash
    - name: "Define Existing Admin Password Hash"
      ansible.builtin.set_fact:
        existing_gitlab_admin_password_hash: "{{ admin_password_hash_file_slurp.content | b64decode }}"

# Define Admin Password Update Fact
- name: "Define Existing Admin Password Hash"
  ansible.builtin.set_fact:
    gitlab_admin_password_update_enabled: "{{ existing_gitlab_admin_password_hash | default('') == requested_gitlab_admin_password_hash }}"

# Admin Password Update Enabled Block
- name: "Admin Password Update Enabled Block"
  when: gitlab_admin_password_update_enabled or gitlab_admin_password_force_update
  block:

    # Ensure Admin Password is Updated
    - name: "Ensure Admin Password is Updated"
      ansible.builtin.command: |
        sudo gitlab-rails runner "
          user_id = {{ _gitlab_admin_userid }}
          username = '{{ _gitlab_admin_username }}'
          new_password = '{{ gitlab_admin_password }}'
          user = User.find(user_id)
          user.username = username
          user.password = new_password
          user.password_confirmation = new_password
          user.password_automatically_set = false
          user.save!
          puts 'Admin User Name/Password Has been Updated.'
        "
      register: admin_password_update_result

    # Ensure Admin Password Hash is Stored
    - name: "Ensure Admin Password Hash is Stored"
      ansible.builtin.copy:
        content: "{{ requested_gitlab_admin_password_hash | b64encode }}"
        dest: "{{ gitlab_admin_password_hash_file }}"
        mode: '0640'
        force: true
